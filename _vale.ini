# Core settings appear at the top
# (the "global" section).

# Here's an example of a relative path:
#
# .vale.ini
# ci/
# ├── vale/
# │   ├── styles/
StylesPath = "~/.local/share/vale/styles"

MinAlertLevel = suggestion

# IgnoredScopes specifies inline-level HTML tags to ignore. In other words, these tags may occur in an active scope (unlike SkippedScopes, which are skipped entirely) but their content still won't raise any alerts.
# By default, `code` and `tt` are ignored.
IgnoredScopes = code, tt

# IgnoredClasses specifies classes to ignore. These classes may appear on both inline- and block-level HTML elements.
IgnoredClasses = my-class, another-class

# SkippedScopes specifies block-level HTML tags to ignore. Any content in these scopes will be ignored.
# By default, `script`, `style`, `pre`, and `figure` are ignored.
SkippedScopes = script, style, pre, figure

# WordTemplate specifies what Vale will consider to be an individual word.
WordTemplate = \b(?:%s)\b



# In the example above, we're telling Vale to treat MDX files as Markdown files.


# Format-specific settings 
# Format-specific sections apply their settings only to files that match their associated glob pattern.
[formats]

# Format-specific settings appear
# under a user-provided "glob"
# pattern.

# For example, [*] matches all files while [*.{md,txt}] only matches files that end with either .md or .txt.
# You can have as many format-specific sections as you'd like and settings defined under a more specific section will override those in [*].

# Format associations allow you to associate an "unknown" file extension with a supported file format:

mdx = md

# Vocabularies (available since v2.3) allow you to maintain custom lists of terminology independent of your styles.
# https://docs.errata.ai/vale/vocab
# Vocab



[*]

# BasedOnStyles specifies styles that should have all of their rules enabled.
# 'Vale' and 'MyStyle' automatically respects all
# custom exceptions.
#
# The built-in 'Vale' style is required for using
# `Vale.Terms`, `Vale.Avoid`, or `Vale.Spelling`.

# predefined style available at https://github.com/errata-ai/styles
BasedOnStyles = Microsoft, proselint #, write-good


# If you only want to enabled certain rules within a style, you can do so on an individual basis:

# [*]
# Enables only this rule:
# Style1.Rule = YES

# You can also disable individual rules or change their severity level:
# [*]
# BasedOnStyles = Style1

# Style1.Rule1 = NO
# Style1.Rule2 = error
# BlockIgnores 

# [*]
# BlockIgnores = (?s) *({< file [^>]* >}.*?{</ ?file >})

# BlockIgnores allow you to exclude certain block-level sections of text that don't have an associated HTML tag that could be used with SkippedScopes. See Non-Standard Markup for more information.
# TokenIgnores  #
# [*]
# TokenIgnores allow you to exclude certain inline-level sections of text that don't have an associated HTML tag that could be used with IgnoredScopes. See Non-Standard Markup for more information.
TokenIgnores = (\$+[^\n$]+\$+)


# Transform specifies a version 1.0 XSL Transformation (XSLT) for converting to HTML. See Formats#XML for more information.
Transform = docbook-xsl-snapshot/html/docbook.xsl
