# shell functions
#
# find a directory by name, and go to that directory location
# by default, the search begins at the current directory (pwd) 
#
# usage:
#            goto "*pattern*"
#
#            goto -b "*pattern*"
#
#      -a    starts the search from the user's $HOME
#      -b    also opens the directory in whatever $FILE_BROWSER you specify
#
#

FILE_BROWSER=/usr/bin/pcmanfm

go_to_dir() {
    rawdir=$1
    dir=`echo ${rawdir} | /bin/sed -e :a -e '/^\n*$/{$d;N;};/\n$/ba'`
    echo -e "\ncd ${dir}\n"
    cd "${dir}"
    return
}

do_browse() {
    nohup ${FILE_BROWSER} $1 > /dev/null &
}


goto() {

    SEARCH_ALL_FLAG='-a'
    BROWSE_FLAG='-b'

    search_string=${1}
    search_start_dir=${PWD}
    open_file_browser=0

    num_args=$#

    search_string=${argv[$num_args]}   # zsh uses 1-based array indexing    
    
    if [[ "${1}" == ${BROWSE_FLAG} || "${2}" == ${BROWSE_FLAG}  ]]
    then
	open_file_browser=1
    fi

    if [[ "${1}" == ${SEARCH_ALL_FLAG} || "${2}" == ${SEARCH_ALL_FLAG}  ]]
    then
	search_start_dir=${HOME}
    fi
    
    echo "searching from ${search_start_dir} for ${search_string}..."
    
    unset dirs_array   #clear the previous search results
    
    let "i = 1"
    for dir in `find ${search_start_dir} -type d -iname "${search_string}"`
    do
	dirs_array[$i]="$dir"
	(( i = ${i} + 1 ))
    done

    (( num_results = ${i} - 1 ))

    if [[ ${num_results} -eq 0 ]]
    then
	echo "no matches found"
	return
    fi
    if [[ ${num_results} -eq 1 ]]
    then
	go_to_dir ${dirs_array[1]}
	if [[ ${open_file_browser} == 1 ]]
	then
	    do_browse ${dirs_array[1]}
	fi
	return # returns control to the calling process i.e. shell session
	#exit - ends the entire shell session - which is NOT what we want
    fi

    echo "${num_results} matches:"
    echo

    let "i = 1"
    for dir in $dirs_array
    do
	echo "$i.  ${dirs_array[$i]}"
	(( i = ${i} + 1 ))
    done

    let "i = 1"

    echo -e "\n"

    read "answer?which directory? "

    if [[ ${answer} == 'q' ]]
    then
	return
    fi

    go_to_dir ${dirs_array[$answer]}

    if [[ ${open_file_browser} == 1 ]]       
    then
	do_browse ${dirs_array[$answer]}
    fi

}
